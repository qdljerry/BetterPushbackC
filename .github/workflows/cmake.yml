name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_env:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Cache ENV
      uses: actions/cache@v1.2.1
      id: env_cache
      with:
        path: ./src/libacfutils
        key: bp-env

    - name: Install DEP
      if: steps.env_cache.outputs.cache-hit != 'true'
      run: sudo apt install -y build-essential cmake pkg-config automake autoconf libtool unzip libxcursor-dev libglu1-mesa-dev libpulse-dev libasound2-dev libpng-dev mingw-w64-x86-64-dev gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64

    - name: Install Qt
      if: steps.env_cache.outputs.cache-hit != 'true'
      uses: jurplel/install-qt-action@v3.2.1
      with:
        cache: bp-qt
    
    - uses: actions/checkout@v3
      if: steps.env_cache.outputs.cache-hit != 'true'
      with:
        submodules: true

    - name: Build DEP
      if: steps.env_cache.outputs.cache-hit != 'true'
      run: cd ./src/libacfutils && ./build_deps

  build:
    needs: build_env
    runs-on: ubuntu-latest
    
    steps:
    - name: Cache ENV
      uses: actions/cache@v1.2.1
      id: env_cache
      with:
        path: ./src/libacfutils
        key: bp-env
    
    - uses: actions/checkout@v3
      with:
        clean: false
        submodules: true
    
    - name: Build DEP
      run: cd ./src/libacfutils && ./build_deps
    
    - name: Build libacfutils
      run: cd ./src/libacfutils/qmake && ./build-win-lin

    - name: Build
      # Build your program with the given configuration
      run: ./build_release
